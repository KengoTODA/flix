plugins {
    id 'application'
    id 'scala'
}

application {
    mainClass.set('ca.uwaterloo.flix.Main')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.scala-lang:scala-library:2.13.5'
    implementation 'org.scala-lang:scala-reflect:2.13.5'

    implementation 'org.java-websocket:Java-WebSocket:1.3.9' // 05a256a41372bf56ffdb2e335b63d74d
    implementation 'org.jline:jline:3.5.1' // 4c20d2879ed2bd75a0771ce29e89f6b0
    implementation 'org.json4s:json4s-core_2.13:3.5.5' // e1a3e6d70adf0a73cb9e8b66cb49308f
    implementation 'org.json4s:json4s-native_2.13:3.5.5' // 0f2ce59610c538a94bb77f9d7c66b42c
    implementation 'org.ow2.asm:asm:9.2' // 8f184dce9b1bedc675d4a3640d43ddf0
    implementation 'org.parboiled:parboiled_2.13:2.2.1' // 5f4b60cb30a6bcc0a78efea2b9421945
    testImplementation 'org.scalatest:scalatest_2.13:3.3.0-SNAP3' // df7a5054753d6185e09c03b1a301d480
    implementation 'org.scala-lang.modules:scala-parallel-collections_2.13:0.2.0' // de4baebed21d6541e675f7dfce971b34
    implementation 'com.github.scopt:scopt_2.13:4.0.1' // 512829d5879da59ac71d581f4b993074
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = [
            "-language:postfixOps",
            "-Xfatal-warnings",
            "-Ypatmat-exhaust-depth", "200"
    ]
    compileScala.sourceCompatibility = 11
    compileScala.targetCompatibility = 11
}

sourceSets {
    main {
        scala {
            srcDirs = ['main/src']
        }
    }
    test {
        scala {
            srcDirs = ['main/test']
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'ca.uwaterloo.flix.Main'
    }

    from {
        // This line has to come before the next
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    
    from('main') {
        include '**/*.flix'
    }

    duplicatesStrategy = 'exclude'
}

task testAll(dependsOn: ['testClasses'], type: JavaExec) {
    mainClass = 'org.scalatest.tools.Runner'
    args = ['-s', 'ca.uwaterloo.flix.TestAll', '-o']
    classpath = sourceSets.test.runtimeClasspath
    standardInput = System.in
}

test.dependsOn testAll

